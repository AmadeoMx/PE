(name 'SqueakNxt-Compiler-Richo.77' message '* Fixed a bug when trying to translate a primitive function.' id '4d96fac3-c8e7-6042-96d5-c39314a8a0c8' date '7 February 2013' time '6:04:57 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.76' message '* Changed Win32Nbc>>execute to show the shell window minimized' id '00c4746f-d874-ba4b-9476-1ab28bf8febe' date '6 December 2012' time '1:16:16 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.75' message '* Added a few missing #translated call in Win32Nbc>>execute.* Also added a check in the same method to see if nbc is installed and signal a more descripting error.' id '568fd047-fcd2-5040-836b-d90f5e1e6996' date '30 November 2012' time '1:27:29 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.74' message '* Since now all variables are generated after sending #asCIdentifier to their name, I had to change the hardcoded "self" variable in NxcMethodTranslator>>acceptVariableNode: and NxcTranslatedProgram>>mainImplementation.Now that we don''t use tasks we might not need a global "self", but I''ll leave the change to the future because it might break all the existing stuff.' id '89ecf9f7-c6b8-174a-bb86-ebf67d72ab36' date '10 April 2012' time '12:00:03 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.73' message '* Changed all variable generations to send #asCIdentifier to the variable''s name.' id 'b6ce55f1-adad-6c43-8aa8-b87cdbfd840e' date '9 April 2012' time '4:59:07 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.72' message '* Changed NxcCompiler>>#parse: to work correctly under linux (which has different line endings)' id '4ae0a766-e130-4cbf-b421-50f1657eac9d' date '29 March 2012' time '8:21:43 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.71' message '* Implemented NXProgram>>currentTick so that we could debug programs directly in Smalltalk.* Changed #main to follow Arduino conventions calling #setup, then eternal #loop.' id 'c5235264-0d15-e842-9ed0-048f4129be8f' date '29 March 2012' time '5:47:30 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.70' message '* Fixed NxcCompiler>>#waitUntilNbcFinishes for the bluetooth case.' id '8b011e9b-f2de-d44d-921b-6d2bccad17cd' date '27 March 2012' time '6:21:21 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.69' message '* Changed NxcCompiler to download the program and ran it automatically.' id '6679d8d6-3099-4844-9f5c-923675d5918a' date '26 March 2012' time '5:49:14 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.68' message '* Added an utility method to test if compilation works on all NXProgram subclasses.* Fixed a bug when trying to translate functions from primitive classes (the receiver argument was gone).' id 'de1a85e9-a582-9042-be87-db2cc66155e8' date '21 March 2012' time '7:50:37 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.67' message 'empty log message' id 'ff43f1c6-9493-5f47-bde4-aee4d6a940cb' date '19 March 2012' time '2:52:56 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.66' message '* Improved the way NxcCompiler waits until nbc finishes. It takes a little longer but I believe is more robust. I should test it on linux though.' id 'be4062c5-9a05-df44-aa3a-390e86c6a13e' date '19 March 2012' time '12:03:55 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.65' message '* Added linux support using OSProcess (nbc binaries must be in the same directory as the image).* Needs testing.' id '5e402972-16dd-4561-a200-f95137002ffc' date '18 March 2012' time '5:06:32 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.64' message '* Changed NxcTranslatedProgram to return its formatted source.' id '3a1f0c96-6430-bf4e-9349-e3fd8bb2a157' date '2 March 2012' time '6:03:31 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.63' message '* Added NXProgram class>>#allIncludes to hide superclass includes.' id '6b1f2ec4-c590-6742-a701-9b7b96ff2f30' date '10 January 2012' time '2:23:56 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.62' message '* Changed NXProgram>>#nxc: to use "c" pragma.* Removed "nxc" pragma.* Changed NxcMethodTranslator>>acceptVariableNode: to inherit variables.' id 'a082ae8f-ec74-8b40-8249-55eea403812b' date '24 October 2011' time '5:28:02 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.61' message '* Added a few extra pragmas: #nxc and #startTask to handle the special cases when we want to inline nxc code directly in the code and when we want to start a task.* Added #nxc: and #start: methods implementing the above mentioned pragmas.* Removed NxcProgramTranslator>>#translateMain:of: because it is not needed anymore. It was there in order to override the recursive behavior because if the "StartTask" function was called the task method would never be reached and the translation would be incomplete, but now with the new #startTask pragma this is no longer necessary, we just need to signal the CMethodToImplement when the #startTask pragma is found.' id '25345831-cde1-844b-95c3-865cc42f3d73' date '20 October 2011' time '4:09 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.60' message 'empty log message' id '1d55428a-24bb-8c41-8ae9-7f6c96b7c4f6' date '14 October 2011' time '4:27:47 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.59' message 'empty log message' id '80c35171-486c-9a4f-8089-cce7a2f177ed' date '13 October 2011' time '6:01:19 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.58' message '* Updating it to new version of CTranslator.' id 'c6dd6b94-462a-8d45-a6ab-f45a5741d254' date '13 October 2011' time '5:55 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.57' message '* Modified to work with Etoys:	- Added special message #nxc: which adds the string parameter directly in the translated code, without transforming it in any way.	- The methods defined as tasks don''t get a "return self" added at the end.	- The methods now don''t receive "self" as first parameter. Instead, a "self" variable has been defined globally. This is to solve the problem that tasks don''t accept parameters.	- The translation of methods recursively from #main won''t work because some methods are never reached with a message send so I now iterate over all the selectors of the program and I just translate everything.' id '550f51c4-fa15-d544-b04e-9bd2d1a3f098' date '29 July 2011' time '6:28:23 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.56' message '* Fixed a bug when translating inst var accessings' id 'f23d7979-b3af-c444-b5dc-886a45dbc75e' date '27 July 2011' time '7:39:10 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.55' message '* This version works with CTranslator-Richo.21. However, the compilation works but I haven''t been able to download the program to the brick using usb or bluetooth...' id '1fc9762d-c1d4-5b4c-b789-f1c412a86800' date '27 July 2011' time '7:30:36 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.54' message 'empty log message' id '93b104ca-13ac-094d-91fa-2fbc2a42f6af' date '30 June 2011' time '6:41:55 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.53' message '* Removed #defaultMainSelector hack.' id '77804d27-ca01-504b-b205-6de617f662d5' date '29 June 2011' time '11:44:51 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.52' message '* Renamed NxcStruct to NxcTranslatedStruct' id 'f8a1a4f2-25f2-9b40-9afd-8ff4370c35c1' date '28 June 2011' time '4:11:35 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.51' message '* Renamed method #storeMethodDeclaration: to #storeMethodSignature:.* Added NxcOutputBuilder.' id 'e3a1b015-ae3a-2745-8062-d6c21045c9c6' date '28 June 2011' time '12:40:55 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.50' message '' id '75fcb3a3-770b-8d4c-bd55-4b41170a17fb' date '28 June 2011' time '12:29:27 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.49' message '* Changed all #returnType: pragma to use the new format. See CTranslator-Richo.4 comment' id '99c45dd4-fad9-d14b-8aea-ab52e8c9dac2' date '22 June 2011' time '5:02:25 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.48' message 'empty log message' id '7910282d-cb7c-424b-b479-de0a00f69913' date '22 June 2011' time '11:07:35 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.47' message '* Simplified a lot by extracting the most generic parts into a separate project called CTranslator. Now we depend on it.' id '0c45690d-cb39-4747-b6eb-6b3dc7244eda' date '21 June 2011' time '4:03:01 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.46' message '* Removed old stuff...' id '85a3d21a-bf20-0d4b-b1ca-b1297d5ea119' date '23 February 2011' time '2:58:21 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.45' message '* Added DodgeWallExample and FollowLineExample.* NXBlock is now a subclass of NXPrimitiveType.* Added NXNumber>>#sin. It''s not tested though, because I''m out of batteries for the Nxt.* Fixed a bug in NxcPrimitiveRule>>#removeSemicolonIfNecessaryOn:for:.* Changed NXObject definition to receive an Array as instance variable types instead of a String. This make all the type definitions a little more coherent.' id '6eef0004-eef8-0b4d-bc7c-7fdce6500780' date '22 February 2011' time '8:01:39 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.44' message '* Created NxcStruct and NxcInstVar (the former is a collection of the latter).* The NxcTranslatedProgram is now a collection of NxcStructs and NxcTranslatedMethods.* NxcRule renamed back to NxcPrimitiveRule.* The source creation is now a responsibility of NxcTranslatedProgram. As a consequence of this, the program translator is much simpler.' id '275d7f54-204f-1443-a618-89e66eb7a77f' date '22 February 2011' time '1:01:25 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.43' message 'empty log message' id 'ba1bd965-a570-df45-b73e-092c8f0bd121' date '22 February 2011' time '1:00:33 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.42' message '* Created NxcStruct and NxcInstVar (the former is a collection of the latter).* The NxcTranslatedProgram is now a collection of NxcStructs and NxcTranslatedMethods.* NxcRule renamed back to NxcPrimitiveRule.* The source creation is now a responsibility of NxcTranslatedProgram. As a consequence of this, the program translator is much simpler.' id 'e1694197-0351-0941-8148-eb0525a659b9' date '22 February 2011' time '12:59:29 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.41' message '* Added NXFloat, NXLong and NXUnsignedLong to NXObject hierarchy.* Added inst var support. Every time the method translator founds an inst var access it signals the InstVarToImplement exception, the program translator is responsible for handling the exception correctly and create the appropriate struct to simulate the class.* Added some basic math operations not supported by Lego''s standard firmware: #truncated, #floor, #rounded, #//, #\\ and #isDivisibleBy: (#sin and alikes coming next).* Added NxcTranslatedMethod. This will help me to simplify the translators. I also hope it will let me emulate polymorphism eventually.* Added two extension methods: 	1) String>>asNxcIdentifier, which works similarly as #asIdentifier: but works even for special characters.	2) ClassDescription>>ultimateCompiledMethodAt:ifAbsent:, that returns the compiled method deferring to superclass if necessary.' id '76697c60-ca1e-5745-b7cc-0e814047db4e' date '21 February 2011' time '7:27:22 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.40' message 'empty log message' id 'db8dfcf7-0d3e-c645-8f67-9b793e78c5d0' date '17 February 2011' time '8:06:40 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.39' message 'WARNING: This version breaks EtoysCompiler.42.A lot has changed since last commit:* The nxc primitives are no longer hardcoded in a dictionary in the class side of NxcPrimitiveRule. Now I created a hierarchy of objects translatable to Nxc:	NXObject		NXBlock		NXPrimitiveType			NXBoolean			NXNumber			NXString			NXVoid		NXProgramThis classes contain all the methods you can called from a NXProgram. In the case of nxc primitives, they include a pragma called #nxc: with the translation rule. It makes the translator algorithm a little more complicated but much more flexible. Also, it allows to specify an smalltalk implementation of the primitives (very similar to smalltalk primitives, actually), so in the future we could develop a simulator and interpret the same programs from within the image. IMHO that''s pretty cool :)Apart from that, this hierarchy allows you to extend the base library by adding methods to the objects involved. Currently, only primitives are implemented but soon I''ll add some math operations wich are not supported directly by the standard nxt lego firmware.Finally, the translator has been modified to generate structs for your classes, so we can simulate objects in nxc. This last feature is not fully working yet, though.' id '323bf41c-493b-6440-8e9a-f4ef5d749359' date '17 February 2011' time '7:59:25 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.38' message '* Changed back to the version that works. I realized that with all the changes I did, instead of making it simple, I added a lot of dark magic, and I''m a good sourcerer so I only use white magic :)' id 'd0415297-c786-ea4a-ab37-e9612477ffc7' date '7 February 2011' time '3:59:02 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.36' message '* Added inheritance support (well... not exactly but similar :P). When a method is not found in its class, the translator looks for its implementation in the superclasses until NxtProgram. It is also possible to specify, with a pragma, other expressions which will be translated in this method.* Changed NxcPrimitiveRule, now it''s no longer a NxcTranslator subclass but it uses a translator instance. It''s much nicer, I think.' id '06ffd74d-7615-c948-a940-cc728f03258d' date '1 February 2011' time '5:58:54 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.35' message '* Added #currentTick rule.' id 'b55b2e69-055f-1242-928a-cba9a234ee3e' date '31 January 2011' time '5:20:52 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.34' message '* Removed invalid program examples' id 'c8ba88b3-6429-3e46-8b9f-d3682fe3da20' date '31 January 2011' time '1:24:09 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.33' message '* Added primitive rule #buttonPressed:' id '92e83f60-ea0d-9e42-92da-c1bf5d736da3' date '27 January 2011' time '7:24:27 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.32' message '* Added a few primitive rules: #playFile:volume:repeat:, #stopSound, and #,* Fixed a bug in NxcTranslator>>#isATask:, it was not considering the "main" method a task.' id '2e2221f9-4c52-8d4d-a4fc-a2e9c8ef023b' date '27 January 2011' time '6:53:49 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.31' message 'Puto el que lee' id '5f45b45b-6718-fb4f-940b-797e5451018b' date '27 January 2011' time '12:18:41 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.30' message '* Added extension method FileStream class>>#forceNewFileNamed:do:' id '8c4bbaae-0521-4647-bebf-d5c7f0573f4e' date '26 January 2011' time '5:05:03 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.29' message '* Added some nxc rules: #clearScreen, #resetScreen, #playTone:duration:volume:repeat:, and #abs' id 'c3a61297-fc42-e346-8b2c-d6a9aa148f68' date '13 January 2011' time '6:57:12 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.28' message '* Changed RBScanner>>#scanNumber to check if SqNumberParser is installed and try to use it. Somehow, parsing a method in Squeak 4.2 gives an error if we use Number>>#readFrom: instead.' id 'aaf5ab3c-f62d-5e48-a157-406f1b7679f9' date '11 January 2011' time '11:11:05 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.27' message '* Added Random nxc rule' id 'e128653b-af31-cd4d-b726-83878905407a' date '6 January 2011' time '6:02:45 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.26' message '* Removed the multithreading hack. Since it was a hack for Etoys, I decided that SqueakNxt-EtoysCompiler should have it. So I putted there (in another form, of course). But to do that, I needed to add a new special method called #nxc: which lets you write nxc code inside the smalltalk code. I also added pragma #task, which lets you mark a method to be compiled as a task instead of a function. It''s only useful for Etoys right now, but it will be generally useful in the future (I hope).* Modified all the rule strings. Added a prefix @ to all the tokens.' id 'caf93ae0-3e19-2048-b405-3d64338a3e53' date '5 January 2011' time '6:39:42 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.25' message '* Modified multithreading support. Now it allows to start and stop tasks, but it is a hack. For Etoys scripts is enough, though.* Fixed a bug with "^ self", now the "self" variable is ignored.' id '25b3a126-bc6d-6346-9e3d-e3308fdcc0a6' date '5 January 2011' time '1:28:08 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.24' message '* Added two extension methods to AST-Core. One is for Etoys compatibility and the other is a bug fix when parsing pragmas.' id 'd8f180ab-e61a-7c42-882f-a2ebb100c37f' date '5 January 2011' time '10:43:55 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.23' message '* Decreased the delay in NxcCompiler>>#parseErrors.' id '71a64667-55a2-a04f-beb8-3336f37cd201' date '5 January 2011' time '12:15:57 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.22' message '* Fixed a few bugs...* Added a few more rules...' id '06447b37-e453-d641-b657-7e0eed520919' date '4 January 2011' time '6:15:06 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.21' message '' id '88ad86b2-2bba-804f-b515-0d2c12d0e138' date '4 January 2011' time '11:54:52 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.20' message '* Added basic multithreading support using #fork and #forkNamed:. The code needs to be cleaned out a bit.' id '751c70bf-fe0c-6646-a8e4-57a02c04f118' date '3 January 2011' time '6:56:37 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.19' message '* Added a lot of new primitive rules.* Added DodgeWall example, which uses the ultrasonic sensor.* Added a few examples from the NXC_tutorial.pdf.' id 'f54fd7e3-89a9-fc43-897e-238eb3b1d3e3' date '3 January 2011' time '6:08:30 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.18' message '* Renamed SeguidorDeLinea to FollowLineExample. Also, all methods were translated to english. We need to keep our code international :).* Changed nbc parameters on NxcCompiler to use optimization level 2. This seems to be important, otherwise FollowLineExample doesn''t work. I copy this from Bricxcc compiler preferences.* Added a few more nxc primitive rules.' id '72947e7d-6663-c143-bff6-50c75ca5027b' date '3 January 2011' time '2:30:58 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.17' message '* Removed all the old stuff regarding NbcTranslator.' id 'b1c75014-d877-8c47-9409-4e1b415cffd2' date '3 January 2011' time '12:47:06 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.16' message '* Added a few more comments.* Moved all the rule definitions from NxcTranslator>>#nxcPrimitives to NxcPrimitiveRule class>>#initialize.* Added method declarations before the actual implementation. This avoids worrying about the source code order.* Added a few more primitives.* Added NxcPrimitiveRule>>#removeSemicolonIfNecessary:' id 'ba5a6e5b-c336-7840-b036-a90b57c45900' date '3 January 2011' time '12:44:39 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.15' message '* Added a few more comments.' id 'cc2d0af0-4c87-b649-95bb-685c5fa3b858' date '2 January 2011' time '12:13:58 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.14' message '* Added some comments.' id '9b3e1132-c744-3c41-8955-f6f361c47bf3' date '1 January 2011' time '9:54:15 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.13' message '* Fixed a DNU when asking the NxtProgram class for the instVarTypes.' id 'badc67eb-66f7-1d4c-8c51-1c5f97980721' date '1 January 2011' time '4:44:49 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.12' message '* Fixed NxtProgram class>>#definition to work correctly in Etoys.' id 'dc547e0b-3edb-204a-9cc8-8a05a9ff18b7' date '1 January 2011' time '4:40:33 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.11' message '* Removed unused class inst var "instVarTypes" from NxtProgram.* Improve #instanceVariableTypesString to condense blanks of the result.' id '21e1f8a8-2358-4f4d-9279-c4bc7a455079' date '1 January 2011' time '4:31:17 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.10' message '* Improved the mechanism to store inst var types using the class definition. Now we don''t rely on a class inst var (which will be lost after we file out the class or store it with monticello), instead we automatically generate a class side method called #instanceVariableTypesString, which returns the type info.' id 'b6899f85-b633-1546-9f45-d6f81d88dcd0' date '1 January 2011' time '4:28:11 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.9' message '* Renamed NbcCompiler to NxcCompiler.* Renamed NbcError to NxcError.* The other Nbc* classes are left to be removed later. For now I moved them to the category ''SqueakNxt-Compiler-TranslationViejo'', just in case I need it as reference or something.* Added NxcTranslator. It''s quite simple and it works well, although it''s not completely finished yet.* Added VariableInfo. This class stores the info (scope, name and type) of all the variables found in a program.* Added NxcPrimitiveRule. This class is a very simple way of defining a rule to translate a nxc primitive (functions such as "NumOut" or "Wait"; operators such as "+" or "=="; and even control structures such as "if", "repeat", etc.). Look at NxcTranslator>>#nxcPrimitives to see all the defined rules.* Added NxcProgram. Just a reification of a nxc program which makes the code easier to use.' id 'f2af6c84-9ec0-094a-bdf2-94857fed58ca' date '1 January 2011' time '4:01:10 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.8' message '* I''ve decided to translate to nxc instead of nbc. This means I have to throw away all the Nbc* classes, but it''s ok. Nxc is not really that different from nbc, it''s much nicer and it supports functions.' id 'bef80d6a-e0b2-394c-83aa-49ab172facae' date '29 December 2010' time '6:02:47 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.7' message '* Added a few useful methods that make compiling and downloading programs much easier. First, a NxtProgram can be translated to nbc by sending #asNbcProgram to its class. This will create an instance of NbcProgram, which understands useful methods such as #verify, #compileInFileNamed:, #downloadUsingBluetooth:, and #downloadUsingUsb.The line below will compile and download the program using its default name ("NxtProgramTest2").	NxtProgramTest2 asNbcProgram downloadUsingUsb.To specify a different name, you can use:	(NxtProgramTest2 asNbcProgram: ''anotherName'') downloadUsingUsb.' id '3a4459c2-825a-e148-8876-ef9b8a6f7149' date '29 December 2010' time '3:14:23 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.6' message 'empty log message' id '019d0730-f714-ec41-800c-5563dbb6a21c' date '29 December 2010' time '12:49:23 pm' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.5' message '* Started working on NbcTranslator.' id 'c0a69f79-1a20-9f42-ad02-97c4b46e229d' date '28 December 2010' time '7:14:41 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.4' message '* Changed Nbc>>#execute to avoid showing the console window.* Improved NbcCompiler code a little. Added some comments, also.' id '20fc7680-e4b5-d849-9ae2-1b2910ce319d' date '27 December 2010' time '10:16:25 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.3' message '* Modified NbcCompiler to download programs to the nxt using either usb or bluetooth.' id 'aef21747-0e8b-6f46-82e7-43bc11cdba68' date '27 December 2010' time '6:41:17 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.2' message '* Renamed NbcExe to Nbc.* Added NbcCompiler class. This class will be responsible for using Nbc to compile, verify and download programs to the nxt. For now, it only has the methods: #verify: which receives a program as a parameter and returns a list of errors, and #parse: which looks for the errors in nbc errors file.* Added NbcError class to represent an error. It has three properties: "description", "position" (number of line), and "source".' id 'c5b555f5-b2a9-ed4c-8104-3315ea839b7d' date '25 December 2010' time '5:41:10 am' author 'Richo' ancestors ((name 'SqueakNxt-Compiler-Richo.1' message '* Created NbcExe, a very simple api for accessing nbc compiler using FFI.* Added also NbcTranslator, a (currently empty) subclass of RBProgramNodeVisitor which will visit the RB parse tree and create a stream of nbc code ready to be compiled and downloaded into the Lego Nxt.* This package depends on AST-Core.' id '7be60787-60ec-bd49-9a0a-a6bc6600dbe3' date '25 December 2010' time '1:10:37 am' author 'Richo' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())